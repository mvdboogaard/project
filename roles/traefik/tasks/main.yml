---
# tasks file for traefik
#
- name: install jsondiff
  pip:
    name:
      - jsondiff


# What is this?
# This stack exists solely to deploy the traefik_public overlay network, so that
# other stacks (including traefik-app) can attach to it
- name: Create Treafik public network
  docker_stack:
    state: present
    name: traefik
    compose:
      - version: '3.2'
        services:
          scratch:
            image: scratch
            networks:
              - public
            deploy:
              replicas: 0
        networks:
          public:
            driver: overlay
            attachable: true
            ipam:
              config:
                - subnet: 172.16.200.0/24
  when: "'master01' in inventory_hostname"

- name: Create traefikv2
  docker_stack:
    state: present
    name: traefikv2
    compose:
      - version: '3.3'
        services:
          app:
            image: traefik:v2.5
            command: 
              - --providers.docker=true
              - --providers.docker.exposedbydefault=false
              - --providers.docker.swarmmode=true
              - --providers.docker.endpoint=unix:///var/run/docker.sock
              - --entrypoints.http.address=:80
              - --entryPoints.http.http.redirections.entryPoint.to=https
              - --entryPoints.http.http.redirections.entryPoint.scheme=https
              - --entrypoints.https.address=:443
              - --entrypoints.https.http.tls.certresolver=mytlschallenge
              - --accesslog
              - --log.level=DEBUG
              - --api.debug=true
              - --api.dashboard=true
              - --api.insecure=true
              - --metrics=true
              - --metrics.prometheus=true
              - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
              - --metrics.prometheus.addEntryPointsLabels=true
              - --metrics.prometheus.addServicesLabels=true
              - --metrics.prometheus.entryPoint=metrics
              - --metrics.prometheus.manualrouting=true
              #- --entrypoints.metrics.address=:8082
              - --certificatesresolvers.mytlschallenge.acme.httpchallenge.entrypoint=http
              - --certificatesresolvers.mytlschallenge.acme.email=mvdboogaard@gmail.com
              - --certificatesresolvers.mytlschallenge.acme.storage=/certificates/acme.json
            ports:
              - target: 80
                published: 80
                protocol: tcp
                mode: host
              - target: 443
                published: 443
                protocol: tcp
                mode: host
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock:ro
              - traefik-public-certificates:/certificates
            networks:
              - traefik_public
            deploy:
              mode: global
              labels:
                - "traefik.enable=true"
                - "traefik.docker.network=traefik_public"
                # Routers definitions
                ## API
                - "traefik.http.routers.api_http.rule=Host(`staging-traefik.example.com`)" 
                - "traefik.http.routers.api_http.entrypoints=http"
                - "traefik.http.routers.api_http.middlewares=https-redirect,IPwhitelistVPN"
                ## API secure
                - "traefik.http.routers.api_https.rule=Host(`staging-traefik.example.com`)"
                - "traefik.http.routers.api_https.entrypoints=https"
                - "traefik.http.routers.api_https.tls=true"
                - "traefik.http.routers.api_https.service=api@internal"
                - "traefik.http.routers.api_https.tls.certresolver=mytlschallenge"
                - "traefik.http.routers.api_https.middlewares=admin-auth"
                - "traefik.http.routers.api_https.middlewares=IPwhitelistVPN"
                ## Metrics
                - "traefik.http.routers.metrics.rule=Host(`staging-traefik.example.com`) && Path(`/metrics`)"
                - "traefik.http.routers.metrics.entrypoints=https"
                - "traefik.http.routers.metrics.tls=true"
                - "traefik.http.routers.metrics.service=prometheus@internal"
                - "traefik.http.routers.metrics.middlewares=IPwhitelistPrometheus"
                # Services definitions
                - "traefik.http.services.dummy.loadbalancer.server.port=9999"
                # Middlewares definitions
                - "traefik.http.middlewares.admin-auth.basicauth.users=admin:{{ traefik_admin_password }}"
                - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
                - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
                - "traefik.http.middlewares.IPwhitelistPrometheus.ipwhitelist.sourcerange=192.168.0.100/32"
              placement:
                constraints: [node.role == manager]
        networks:
          traefik_public:
            external: true
        volumes:
          traefik-public-certificates:
  when: "'master01' in inventory_hostname"

#- name: Clean old stopped containers
#  docker_prune:
#    containers: yes
